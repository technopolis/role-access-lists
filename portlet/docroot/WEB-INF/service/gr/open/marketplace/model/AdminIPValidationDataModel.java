/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package gr.open.marketplace.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.AuditedModel;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the AdminIPValidationData service. Represents a row in the &quot;opengr_AdminIPValidationData&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link gr.open.marketplace.model.impl.AdminIPValidationDataModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link gr.open.marketplace.model.impl.AdminIPValidationDataImpl}.
 * </p>
 *
 * @author cotria
 * @see AdminIPValidationData
 * @see gr.open.marketplace.model.impl.AdminIPValidationDataImpl
 * @see gr.open.marketplace.model.impl.AdminIPValidationDataModelImpl
 * @generated
 */
public interface AdminIPValidationDataModel extends AuditedModel,
	BaseModel<AdminIPValidationData> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a admin i p validation data model instance should use the {@link AdminIPValidationData} interface instead.
	 */

	/**
	 * Returns the primary key of this admin i p validation data.
	 *
	 * @return the primary key of this admin i p validation data
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this admin i p validation data.
	 *
	 * @param primaryKey the primary key of this admin i p validation data
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this admin i p validation data.
	 *
	 * @return the ID of this admin i p validation data
	 */
	public long getId();

	/**
	 * Sets the ID of this admin i p validation data.
	 *
	 * @param id the ID of this admin i p validation data
	 */
	public void setId(long id);

	/**
	 * Returns the ip addresses of this admin i p validation data.
	 *
	 * @return the ip addresses of this admin i p validation data
	 */
	@AutoEscape
	public String getIpAddresses();

	/**
	 * Sets the ip addresses of this admin i p validation data.
	 *
	 * @param ipAddresses the ip addresses of this admin i p validation data
	 */
	public void setIpAddresses(String ipAddresses);

	/**
	 * Returns the roles of this admin i p validation data.
	 *
	 * @return the roles of this admin i p validation data
	 */
	@AutoEscape
	public String getRoles();

	/**
	 * Sets the roles of this admin i p validation data.
	 *
	 * @param roles the roles of this admin i p validation data
	 */
	public void setRoles(String roles);

	/**
	 * Returns the company ID of this admin i p validation data.
	 *
	 * @return the company ID of this admin i p validation data
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this admin i p validation data.
	 *
	 * @param companyId the company ID of this admin i p validation data
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this admin i p validation data.
	 *
	 * @return the user ID of this admin i p validation data
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this admin i p validation data.
	 *
	 * @param userId the user ID of this admin i p validation data
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this admin i p validation data.
	 *
	 * @return the user uuid of this admin i p validation data
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this admin i p validation data.
	 *
	 * @param userUuid the user uuid of this admin i p validation data
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this admin i p validation data.
	 *
	 * @return the user name of this admin i p validation data
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this admin i p validation data.
	 *
	 * @param userName the user name of this admin i p validation data
	 */
	public void setUserName(String userName);

	/**
	 * Returns the create date of this admin i p validation data.
	 *
	 * @return the create date of this admin i p validation data
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this admin i p validation data.
	 *
	 * @param createDate the create date of this admin i p validation data
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this admin i p validation data.
	 *
	 * @return the modified date of this admin i p validation data
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this admin i p validation data.
	 *
	 * @param modifiedDate the modified date of this admin i p validation data
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the notes of this admin i p validation data.
	 *
	 * @return the notes of this admin i p validation data
	 */
	@AutoEscape
	public String getNotes();

	/**
	 * Sets the notes of this admin i p validation data.
	 *
	 * @param notes the notes of this admin i p validation data
	 */
	public void setNotes(String notes);

	/**
	 * Returns the active of this admin i p validation data.
	 *
	 * @return the active of this admin i p validation data
	 */
	public boolean getActive();

	/**
	 * Returns <code>true</code> if this admin i p validation data is active.
	 *
	 * @return <code>true</code> if this admin i p validation data is active; <code>false</code> otherwise
	 */
	public boolean isActive();

	/**
	 * Sets whether this admin i p validation data is active.
	 *
	 * @param active the active of this admin i p validation data
	 */
	public void setActive(boolean active);

	/**
	 * Returns the debug mode of this admin i p validation data.
	 *
	 * @return the debug mode of this admin i p validation data
	 */
	public boolean getDebugMode();

	/**
	 * Returns <code>true</code> if this admin i p validation data is debug mode.
	 *
	 * @return <code>true</code> if this admin i p validation data is debug mode; <code>false</code> otherwise
	 */
	public boolean isDebugMode();

	/**
	 * Sets whether this admin i p validation data is debug mode.
	 *
	 * @param debugMode the debug mode of this admin i p validation data
	 */
	public void setDebugMode(boolean debugMode);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(AdminIPValidationData adminIPValidationData);

	public int hashCode();

	public CacheModel<AdminIPValidationData> toCacheModel();

	public AdminIPValidationData toEscapedModel();

	public String toString();

	public String toXmlString();
}